services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ${LOG_DATA_DIRECTORY}:/app/log_data/
      - ${RESULTS_DIRECTORY}:/app/analysis_results
      - .:/app
    environment:
      DB_URL: "${DB_URL}"
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      LOG_DATA_DIRECTORY: "/app/log_data/"
      RESULTS_DIRECTORY: "/app/analysis_results/"
      FLASK_DEBUG: "${FLASK_DEBUG:-0}"
      APP_CMD: "flask --app main.py run --host 0.0.0.0 --port 5000"
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: []
    command: celery -A server.make_celery worker --concurrency=4 --loglevel=info
    volumes:
      - .:/app
    environment:
      DB_URL: "${DB_URL}"
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      LOG_DATA_DIRECTORY: "/app/log_data"
      RESULTS_DIRECTORY: "/app/analysis_results"
    depends_on:
      - redis
      - db
  db:
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
      PGTZ: ${PGTZ}
    volumes:
      - db_data:/var/lib/postgresql/data
  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080

volumes:
  db_data:
